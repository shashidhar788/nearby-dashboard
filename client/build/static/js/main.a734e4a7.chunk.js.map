{"version":3,"sources":["components/Header.jsx","components/SearchBox.jsx","components/Options.jsx","components/Marker.jsx","components/SimpleMap.jsx","components/CardList.jsx","components/helper.js","components/Main.jsx","App.js","index.js"],"names":["Header","Fragment","dark","expand","className","href","navbar","target","autocompleteService","current","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","GoogleMaps","place","setPlace","classes","React","useState","value","setValue","inputValue","setInputValue","options","setOptions","loaded","useRef","window","document","querySelector","src","position","id","script","createElement","setAttribute","appendChild","loadScript","e","console","log","fetch","useMemo","throttle","request","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","input","results","newOptions","place_id","Autocomplete","style","padding","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onChange","event","newValue","onInputChange","newInputValue","renderInput","params","TextField","label","variant","fullWidth","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","map","match","offset","length","Grid","container","alignItems","item","xs","part","index","fontWeight","highlight","Typography","secondary_text","Options","setResults","setRange","range","placeId","setPlaceId","onSubmit","preventDefault","resultsSelect","rangeSelect","row","for","sm","type","name","size","Marker","props","popoverOpen","setPopoverOpen","toggle","backgroundColor","cursor","title","onClick","placement","isOpen","group","range_zoom","5","10","25","50","75","100","200","SimpleMap","events","center","forKey","zoom","setZoom","lat","lng","height","width","bootstrapURLKeys","key","libraries","defaultZoom","onGoogleApiLoaded","radius","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","apiIsLoaded","i","event_name","group_name","lon","Math","random","DetailComp","tag","borderColor","Date","Number","parseInt","event_time","toLocaleDateString","toLocaleTimeString","hour","minute","event_url","response_yes","response_no","CardList","tableRows","getWithoutDuplicates","arr","seen","filter","hasOwnProperty","requestFunc","limit","a","R","sin","cos","acos","π","PI","limit_no","minLat","maxLat","minLon","maxLon","sql","method","headers","body","JSON","stringify","resp","json","respBody","resultRows","rows","forEach","p","d","pointsWithinCircle","sort","b","withoutDuplicateGroup","slice","Main","SetEvents","setCenter","url","res","ok","data","message","fetchLatLon","overflow","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a734e4a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, NavItem, NavLink,Navbar, NavbarBrand, Jumbotron } from 'reactstrap';      \r\n\r\nimport './styles.css';\r\n\r\nconst Header = () =>{\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Navbar dark expand=\"sm\">\r\n            <div className=\"container\">\r\n                <NavbarBrand href=\"/\">Nearby</NavbarBrand>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                <NavItem>\r\n                    <NavLink href=\"https://github.com/saivk7/kafka-spark-project\" target=\"_blank\">Github (Kafka-Spark Backend)</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                    <NavLink href=\"https://github.com/saivk7/nearby-dashboard\" target=\"_blank\">Github (Dashboard)</NavLink>\r\n                    </NavItem>\r\n                    \r\n                </Nav>\r\n            </div>\r\n            </Navbar>\r\n\r\n            <Jumbotron >\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Know what's happeing around you with Nearby!</h1>\r\n                            <p>Search for the city you live in and look at the popular events around you! </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            </React.Fragment>\r\n        \r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Header;\r\n        ","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport throttle from 'lodash/throttle';\r\n\r\nfunction loadScript(src, position, id) {\r\n  if (!position) {\r\n    return;\r\n  }\r\n\r\n  const script = document.createElement('script');\r\n  script.setAttribute('async', '');\r\n  script.setAttribute('id', id);\r\n  script.src = src;\r\n  position.appendChild(script);\r\n}\r\n\r\nconst autocompleteService = { current: null };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.text.secondary,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function GoogleMaps({place,setPlace}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(null);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n  const loaded = React.useRef(false);\r\n\r\n  if (typeof window !== 'undefined' && !loaded.current) {\r\n    if (!document.querySelector('#google-maps')) {\r\n      try{\r\n        loadScript(\r\n          'https://maps.googleapis.com/maps/api/js?key=AIzaSyAzcYFYgM-9TLbbq4Ky-9UQ921GjQKMfhE&libraries=places',\r\n          document.querySelector('head'),\r\n          'google-maps',\r\n        );\r\n\r\n      }catch(e){\r\n        console.log(e)\r\n      }\r\n      \r\n    }\r\n\r\n    loaded.current = true;\r\n  }\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        autocompleteService.current.getPlacePredictions(request, callback);\r\n      }, 200),\r\n    [],\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!autocompleteService.current && window.google) {\r\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    }\r\n    if (!autocompleteService.current) {\r\n      return undefined;\r\n    }\r\n\r\n    if (inputValue === '') {\r\n      setOptions(value ? [value] : []);\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: inputValue }, (results) => {\r\n      if (active) {\r\n        let newOptions = [];\r\n\r\n        if (value) {\r\n          newOptions = [value];\r\n        }\r\n\r\n        if (results) {\r\n          newOptions = [...newOptions, ...results];\r\n        }\r\n\r\n        setOptions(newOptions);\r\n        console.log(\"value from search \",value)\r\n        if(value) setPlace(()=> {\r\n          console.log(\"set Place Id is called\")\r\n          return value.place_id\r\n         })\r\n      }\r\n\r\n      \r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [value, inputValue, fetch]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"google-map-demo\"\r\n      style={{padding:\"10px 0px\"}}\r\n      getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\r\n      filterOptions={(x) => x}\r\n      options={options}\r\n      autoComplete\r\n      includeInputInList\r\n      filterSelectedOptions\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setOptions(newValue ? [newValue, ...options] : options);\r\n        setValue(newValue);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"Select a City\" variant=\"outlined\" fullWidth />\r\n      )}\r\n      renderOption={(option) => {\r\n        const matches = option.structured_formatting.main_text_matched_substrings;\r\n        const parts = parse(\r\n          option.structured_formatting.main_text,\r\n          matches.map((match) => [match.offset, match.offset + match.length]),\r\n        );\r\n\r\n        return (\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item>\r\n              <LocationOnIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs>\r\n              {parts.map((part, index) => (\r\n                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\r\n                  {part.text}\r\n                </span>\r\n              ))}\r\n\r\n              <Typography >\r\n                {option.structured_formatting.secondary_text}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport GoogleMaps from './SearchBox';\r\n\r\nconst Options = ({place,setPlace,results,setResults,range,setRange}) => {\r\n  \r\n  const [placeId, setPlaceId] = useState(place)\r\n  \r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    console.log(\"submit called\" ,e)\r\n    setResults(e.target.resultsSelect.value)\r\n    setRange(e.target.rangeSelect.value)\r\n    setPlace(placeId)\r\n  }\r\n  return (\r\n\r\n    <Form  onSubmit={handleSubmit} >\r\n      <FormGroup row>\r\n        <Label for=\"placeName\" sm={3}></Label>\r\n        <Col sm={4}>\r\n          <GoogleMaps place={placeId} setPlace={setPlaceId} />\r\n          \r\n        </Col>\r\n      </FormGroup>\r\n\r\n      <FormGroup row>\r\n        <Label for=\"rangeSelect\" sm={3}>Range in Miles</Label>\r\n        <Col sm={4}>\r\n          <Input type=\"select\" name=\"range\" id=\"rangeSelect\">\r\n            <option>5</option>\r\n            <option>10</option>\r\n            <option>25</option>\r\n            <option>50</option>\r\n            <option>75</option>\r\n            <option>100</option>\r\n            <option>200</option>\r\n          </Input>\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Label for=\"resultsSelect\" sm={3}>Results</Label>\r\n        <Col sm={4}>\r\n          <Input type=\"select\" name=\"resultsSelect\" id=\"resultsSelect\" >\r\n            <option>5</option>\r\n            <option>10</option>\r\n            <option>20</option>\r\n            <option>25</option>\r\n            <option>50</option>\r\n          </Input>\r\n        </Col>\r\n      </FormGroup>\r\n\r\n      <FormGroup row>\r\n        <Col sm={{ size: 10, offset: 3 }} style={{padding:\"10px\"}}>\r\n          <Button  color=\"primary\" type=\"submit\" >Submit</Button>\r\n        </Col>\r\n      </FormGroup>\r\n      <hr></hr>\r\n      <br />\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import React , {useState} from 'react';\r\nimport './Marker.css';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nconst Marker = (props) => {\r\n    const { color, name, index } = props;\r\n\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n    const toggle = () => setPopoverOpen(!popoverOpen);\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"pin bounce\"\r\n          style={{ backgroundColor: color, cursor: 'pointer' }}\r\n          id= \"id\"\r\n          title={name}\r\n          onClick={toggle}\r\n        />\r\n        <div className=\"pulse\" />\r\n        <Popover placement=\"top\" isOpen={popoverOpen} target=\"id\" toggle={toggle}>\r\n            <PopoverHeader>{`${props.index +1}. `} {props.title}</PopoverHeader>\r\n            <PopoverBody>{props.group}</PopoverBody>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Marker;","/* global google */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport SearchBox from \"./SearchBox\";\r\nimport Marker from \"./Marker\";\r\n\r\nconst range_zoom = {\r\n  5:12,\r\n  10:11,\r\n  25:10,\r\n  50:9,\r\n  75:8,\r\n  100:7.5,\r\n  200:6.5\r\n}\r\n\r\nexport default function SimpleMap({events,center,forKey,range}){\r\n  //default zoom = 11\r\n\r\n  const [zoom,setZoom] = useState(range_zoom[range]);\r\n  const apiIsLoaded = (map, maps, center,radius) => {\r\n    console.log(\"radius is \", radius)\r\n    const circle = new google.maps.Circle({\r\n      strokeColor: \"#FF0000\",\r\n      strokeOpacity: 0.3,\r\n      strokeWeight: 2,\r\n      fillColor: \"#FF0000\",\r\n      fillOpacity: 0.1,\r\n      map,\r\n      center: center,\r\n      radius: radius\r\n    });\r\n  };\r\n  \r\n  useEffect(()=>{\r\n    console.log(\"simple map render\", 'center', center, ' key: ', forKey, 'zoom setting to ' , range_zoom[range])\r\n    setZoom(range_zoom[range]);\r\n\r\n  },[center.lat,center.lng,range])\r\n  \r\n  return (\r\n    // Important! Always set the container height explicitly\r\n    <div style={{ height: '40rem', width: '100%' }}>\r\n      <GoogleMapReact\r\n        key= {forKey}\r\n        bootstrapURLKeys={{ key: \"AIzaSyAzcYFYgM-9TLbbq4Ky-9UQ921GjQKMfhE\" ,libraries:'places'}}\r\n        center={{lat:center.lat,lng:center.lng}}\r\n        defaultZoom={zoom}\r\n        onGoogleApiLoaded={({ map, maps }) => {\r\n         \r\n          try{\r\n            return apiIsLoaded(map, maps, {lat:center.lat,lng:center.lng},range* 1609)\r\n          }\r\n          catch(e){\r\n            console.log(e)\r\n          }\r\n        }}\r\n\r\n      >\r\n\r\n        {\r\n          events.map((event, i)=>{\r\n            return (\r\n              <Marker\r\n                index={i}\r\n                title={event.event_name}\r\n                group={event.group_name}\r\n                key={'marker_'+event.lat+event.lon+ Math.random()}\r\n                lat={event.lat}\r\n                lng={event.lon}\r\n              />\r\n\r\n            )\r\n            \r\n          })\r\n\r\n\r\n        }\r\n        \r\n\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n}","import './table.css'\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { Card, Button, CardHeader, CardFooter, CardBody, CardTitle, CardText } from 'reactstrap';\r\n\r\n//for each event row from the events database, we render a card\r\nconst DetailComp = ({row,index}) => {\r\n\r\n  return(\r\n    <Card  >\r\n        <CardHeader tag=\"h6\" style={{ color:\"white\", backgroundColor: '#3f80d4', borderColor: '#99c2f5' }}>{index+1 + `. `}{row.event_name}</CardHeader>\r\n        <CardBody className=\"card-body\">\r\n          <CardTitle className=\"title\" > {new Date(Number.parseInt(row.event_time)).toLocaleDateString()} @ {new Date(Number.parseInt(row.event_time)).toLocaleTimeString([],{hour: '2-digit', minute:'2-digit'})} </CardTitle>\r\n          <CardText className=\"card-text\" >{row.group_name}</CardText>\r\n          \r\n        </CardBody>\r\n        <CardFooter> \r\n            <Button  size=\"sm\" href={row.event_url} target=\"_blank\"color=\"primary\"  >RSVP here!</Button> \r\n            {`  `}\r\n            <Button size=\"sm\" color=\"success\">No. of Attending: {row.response_yes}</Button> \r\n            {`  `}\r\n            {row.response_no>0 && <Button size=\"sm\" color=\"danger\">Not Attending: {row.response_no}</Button>}     \r\n        </CardFooter>\r\n        \r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\nconst CardList = ({ tableRows }) => {\r\n\r\n    useEffect(() => {\r\n        console.log(\"render of card List componenet\", tableRows.length)\r\n    })\r\n    return (\r\n        <div>\r\n\r\n            {tableRows &&\r\n                tableRows.map((row,i) => {\r\n                    return (\r\n                        <DetailComp row={row} index={i} key={`card_${row.lat} _${row.lon}_ ${i}`} />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst getWithoutDuplicates= (arr)=>{\r\n    var seen  = {} //using a hashtable for filetering already seen groups\r\n    return arr.filter(row=>{\r\n        if(seen.hasOwnProperty(row.group_name)){\r\n            //console.log(seen.hasOwnProperty(row.group_name), row.group_name, \"from filter\")\r\n            return false;\r\n        }else{\r\n            seen[row.group_name] = true;\r\n            return true;\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const requestFunc = async (center,range,limit) =>{\r\n    /* \r\n\r\n    Given a center, this asunc function fetches and returns the list of events around\r\n    the center withing the specified radius \r\n\r\n    */\r\n    // REF : https://www.movable-type.co.uk/scripts/latlong-db.html\r\n\r\n    \r\n    if(!center) return null;\r\n    \r\n    const R = 6371e3; // earth's mean radius in metres\r\n    const sin = Math.sin, cos=Math.cos, acos = Math.acos;\r\n    const π = Math.PI;\r\n\r\n    const lat = center.lat;    // or e.g. req.query.lat (degrees)\r\n    const lon = center.lng;    // or e.g. req.query.lon (degrees)\r\n    const radius = Number.parseInt(range)* 1609.34; // or e.g. req.query.radius; (metres)\r\n    const limit_no = Number.parseInt(limit) + 20;\r\n\r\n    // query points within first-cut bounding box (Lat & Lon should be indexed for fast query)\r\n\r\n    const minLat= lat - radius/R*180/π;\r\n    const maxLat= lat + radius/R*180/π;\r\n    const minLon= lon - radius/R*180/π / cos(lat*π/180);\r\n    const maxLon= lon + radius/R*180/π / cos(lat*π/180);\r\n\r\n\r\n    const URL = 'https://nearby-app.de/data'\r\n    const sql = `select event_name,event_url,event_time,group_name,sum(case when response='yes' then 1 else 0 end) as response_yes, sum(case when response='no' then 1 else 0 end) as response_no,lon, lat  FROM meetup_table group by event_name,event_url, event_time,group_name,lat, lon having (lat BETWEEN ${minLat} AND ${maxLat}) AND (lon BETWEEN ${minLon} AND ${maxLon}) LIMIT ${limit_no}`\r\n\r\n    console.log(\"the formed sql is \", sql, \"range\", radius)\r\n\r\n    const resp = await fetch(URL,{\r\n        method:'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n\r\n        body: JSON.stringify({\"query\":sql})\r\n\r\n    })\r\n    const respBody = await resp.json()\r\n    \r\n    const resultRows = respBody.rows;\r\n    \r\n    console.log(\"resultRows first\" , resultRows)\r\n    resultRows.forEach(p=> { p.d = acos(sin(p.lat*π/180)*sin(lat*π/180) +cos(p.lat*π/180)*cos(lat*π/180)*cos(p.lon*π/180-lon*π/180)) * R })\r\n    \r\n    const pointsWithinCircle = resultRows.filter(p => p.d < radius).sort((a, b) => a.d - b.d);\r\n    const withoutDuplicateGroup = getWithoutDuplicates(pointsWithinCircle)\r\n    console.log(\"resultRows after filtering duplicates\" , withoutDuplicateGroup)\r\n    return withoutDuplicateGroup.slice(0,limit);\r\n    \r\n    \r\n}\r\n\r\n/* \r\nconst [ pointsBoundingBox ] = await fetch(sql, params);\r\n\r\n\r\n// add in distance d = acos( sinφ₁⋅sinφ₂ + cosφ₁⋅cosφ₂⋅cosΔλ ) ⋅ R\r\npointsBoundingBox.forEach(p => { p.d = acos(sin(p.Lat*π/180)*sin(lat*π/180) +\r\n    cos(p.Lat*π/180)*cos(lat*π/180)*cos(p.Lon*π/180-lon*π/180)) * R })\r\n\r\n// filter for points with distance from bounding circle centre less than radius, and sort\r\nconst pointsWithinCircle = pointsBoundingBox.filter(p => p.d < radius).sort((a, b) => a.d - b.d);\r\n\r\nconsole.log(pointsWithinCircle); // or e.g. res.render('points', { points: pointsWithinCircle });\r\n\r\n*/","import googleMapReact from 'google-map-react';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Options from './Options';\r\nimport SimpleMap from './SimpleMap';\r\nimport TableComponent from './Table';\r\nimport CardList from './CardList'\r\n\r\nimport { requestFunc } from './helper';\r\n\r\n\r\nconst Main = () =>{\r\n\r\n    const [events,SetEvents] = useState([])\r\n    const [place, setPlace] = useState(\"ChIJOwg_06VPwokRYv534QaPC8g\");\r\n    const [range,setRange] = useState(5)\r\n    const [results,setResults] = useState(5)\r\n\r\n    const [center,setCenter] = useState({\r\n        lat: 40.730610,\r\n        lng: \t-73.935242\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        /* console.log(place, \"place from main\")\r\n        console.log(range,\"range changed\")\r\n        console.log(results,\"results changed\") */\r\n        console.log(\"main render\")\r\n        async function fetchLatLon(place) {\r\n      \r\n            let url =  `https://nearby-app.de/google?placeId=${place}`;\r\n            let config = {};\r\n            \r\n            if(place){\r\n            try{\r\n              \r\n              const res = await fetch(url);\r\n              console.log(\"center [before] is \" ,center)\r\n              if(res.ok){\r\n                const {data} = await res.json()\r\n                console.log(\"data for lat lng from api\", data)\r\n                \r\n                setCenter((center)=>{\r\n                    center.lat = data.lat\r\n                    center.lng = data.lng\r\n                    return {...center}\r\n                })\r\n\r\n                \r\n                console.log(\"center [after] is \" ,center, \"range\", range, \"results\" ,results)\r\n                console.log(\"calling database for results rows\")\r\n                const tableRows = await requestFunc(center,range,results) //replace with range after wards\r\n                \r\n                SetEvents(()=>tableRows)\r\n              }\r\n            }catch(e){\r\n              console.log(\"error fetching lat lon\", e.message)\r\n            }\r\n      \r\n          }}\r\n      \r\n        fetchLatLon(place)\r\n\r\n    },[place,range,results])\r\n\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n        <div className=\"container\"> \r\n            <div className=\"row input-row\">\r\n                <div className=\"col\">\r\n                    <Options place={place} setPlace={setPlace} range={range} results={results} setRange={setRange} setResults = {setResults}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"container\">\r\n\r\n            <div className=\"row table\" >\r\n                <div className=\"col-12 col-lg-7\">\r\n                    <SimpleMap forKey={center.lat+ ' ' + center.lng + 'range'+range} events={events} center={center} range={range } />\r\n                </div>\r\n    \r\n                <div className=\"col-12 col-lg-5\" style={{ height: '40rem',overflow:'scroll'}}> \r\n                        <CardList tableRows={events} />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        \r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;","\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nimport SearchBox from './components/SearchBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      \n      <Main />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}